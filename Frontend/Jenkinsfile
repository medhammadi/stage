pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/medhammadi/stage.git'
            }
        }
        /*
        stage('Build Backend image') {
            steps {
                script {
                    // Construction de l'image backend
                    docker.build("medhammadi/backend:latest", "-f ./Backend/Dockerfile .")
                }
            }
        }
        stage('Push Backend image to Docker Hub') {
            steps {
                script {
                    try {
                        docker.withRegistry('https://registry.hub.docker.com', 'medhammadi') {
                            docker.image("medhammadi/backend:latest").push()
                        }
                    } catch (e) {
                        error "Échec du push de l'image backend: ${e}"
                    }
                }
            }
        }

        /*

        stage('Push Backend image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'credential-med-dockerHub') {
                        // Pousser l'image backend
                        docker.image("medhammadi/backend:latest").push()
                        
                        
                    }
                }
            }
        }*/

        stage('Build Frontend image') {
            steps {
                script {
                    // Construction de l'image front
                    docker.build("medhammadi/frontent:latest", "-f ./Frontend/Dockerfile .")
                }
            }
        }
                stage('Check Image Exists') {
            steps {
                script {
                    def imageExists = sh(script: "docker images -q medhammadi/frontend:latest", returnStdout: true).trim()
                    if (!imageExists) {
                        error "L'image medhammadi/frontend:latest n'existe pas"
                    }
                }
            }
        }

        stage('Push Frontend image to Docker Hub') {
            steps {
                script {
                    try {
                        docker.withRegistry('https://registry.hub.docker.com', 'medhammadi') {
                            docker.image("medhammadi/frontend:latest").push()
                        }
                    } catch (e) {
                        error "Échec du push de l'image frontend: ${e}"
                    }
                }
            }
        }
        /*stage('Push Frontend image to Docker Hub') {
            steps {
                script {
                    try {
                        docker.withRegistry('https://registry.hub.docker.com', 'medhammadi') {
                            docker.image("medhammadi/frontend:latest").push()
                        }
                    } catch (e) {
                        error "Échec du push de l'image frontend: ${e}"
                    }
                }
            }
        }
*/
/*        stage('Push Frontend image to Docker Hub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'medhammadi') {
                        // Pousser l'image front
                        docker.image("medhammadi/frontend:latest").push()
                    }
                }
            }
        }*/
/*
        stage('Deploy Application with Docker Compose') {
            steps {
                script {
                    // Déployer l'application avec Docker Compose
                    sh "docker-compose up -d"
                }
            }
        }
    }*/
}
}
